name: CI

on:
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deployment-dev:
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - uses: actions/checkout@v4

      - name: Remove newlines and encode private key
        id: encode-key
        run: |
          CLEAN_PRIVATE_KEY=$(echo "${{ secrets.SSL_PRIVATEKEY }}" | tr -d '\n')
          ENCODED_PRIVATE_KEY=$(python3 -c "import urllib.parse, os; print(urllib.parse.quote(os.getenv('CLEAN_PRIVATE_KEY', '')))" CLEAN_PRIVATE_KEY="$CLEAN_PRIVATE_KEY")
          echo "ENCODED_PRIVATE_KEY=$ENCODED_PRIVATE_KEY" >> $GITHUB_ENV

      - name: Create Liquibase Properties File
        run: |
          echo "changeLogFile=changelog.xml" > liquibase.properties
          echo "url=jdbc:snowflake://YQQTDYK-CLARIVATEDATASVS.snowflakecomputing.com/?db=CICD_LIQUIBASE&schema=PUBLIC" >> liquibase.properties
          echo "username=CICD_SERVICE_ACCOUNT" >> liquibase.properties
          echo "privateKey=${{ env.ENCODED_PRIVATE_KEY }}" >> liquibase.properties

      - name: Run 'Liquibase status' in a Docker Container for DEV
        uses: docker://liquibase/liquibase:latest
        with:
          args: --log-level=FINE status --context-filter=DEV --defaultsFile=liquibase.properties