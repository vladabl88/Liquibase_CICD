name: CI

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deployment-dev:
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - uses: actions/checkout@v4

      - name: URL encode private key
        id: encode-key
        run: echo "ENCODED_PRIVATE_KEY=$(echo -n '${{ secrets.SSL_PRIVATEKEY }}' | jq -sRr @uri)" >> $GITHUB_ENV

  #    - name: Run 'Liquibase tag' in a Docker Container for DEV
  #      uses: docker://liquibase/liquibase:latest
  #      with:
  #        args: tag --url="jdbc:snowflake://YQQTDYK-CLARIVATEDATASVS.snowflakecomputing.com/?db=CICD_LIQUIBASE&schema=PUBLIC&user=CICD_SERVICE_ACCOUNT&private_key=${{ env.ENCODED_PRIVATE_KEY }}" --tag=${{ github.head_ref }}_Dev --defaultsFile=liquibase.properties

      - name: Run 'Liquibase status' in a Docker Container for DEV
        run: echo "jdbc:snowflake://YQQTDYK-CLARIVATEDATASVS.snowflakecomputing.com/?db=CICD_LIQUIBASE&schema=PUBLIC&user=CICD_SERVICE_ACCOUNT&private_key=${{ env.ENCODED_PRIVATE_KEY }}"
      #  uses: docker://liquibase/liquibase:latest
      #  with:
      #    args: status --url="jdbc:snowflake://YQQTDYK-CLARIVATEDATASVS.snowflakecomputing.com/?db=CICD_LIQUIBASE&schema=PUBLIC&user=CICD_SERVICE_ACCOUNT&private_key=${{ env.ENCODED_PRIVATE_KEY }}" --context-filter=DEV --defaultsFile=liquibase.properties

  #    - name: Run 'Liquibase update SQL' in a Docker Container for DEV
  #      uses: docker://liquibase/liquibase:latest
  #      with:
  #        args: update-sql --url="jdbc:snowflake://YQQTDYK-CLARIVATEDATASVS.snowflakecomputing.com/?db=CICD_LIQUIBASE&schema=PUBLIC&user=CICD_SERVICE_ACCOUNT&private_key=${{ env.ENCODED_PRIVATE_KEY }}" --context-filter=DEV --defaultsFile=liquibase.properties
#
  #    - name: Run 'Liquibase update with rollback' in a Docker Container for DEV
  #      uses: docker://liquibase/liquibase:latest
  #      with:
  #        args: update-testing-rollback --url="jdbc:snowflake://YQQTDYK-CLARIVATEDATASVS.snowflakecomputing.com/?db=CICD_LIQUIBASE&schema=PUBLIC&user=CICD_SERVICE_ACCOUNT&private_key=${{ env.ENCODED_PRIVATE_KEY }}" --context-filter=DEV --defaultsFile=liquibase.properties
#
  #deployment-test:
  #  needs: deployment-dev
  #  runs-on: ubuntu-latest
  #  environment: TEST
  #  steps:
  #    - uses: actions/checkout@v4
#
  #    - name: URL encode private key
  #      id: encode-key
  #      run: echo "ENCODED_PRIVATE_KEY=$(echo -n '${{ secrets.SSL_PRIVATEKEY }}' | jq -sRr @uri)" >> $GITHUB_ENV
#
  #    - name: Run 'Liquibase tag' in a Docker Container for TEST
  #      uses: docker://liquibase/liquibase:latest
  #      with:
  #        args: tag --url="jdbc:snowflake://YQQTDYK-CLARIVATEDATASVS.snowflakecomputing.com/?db=CICD_LIQUIBASE&schema=PUBLIC&user=CICD_SERVICE_ACCOUNT&private_key=${{ env.ENCODED_PRIVATE_KEY }}" --tag=${{ github.head_ref }}_Test --defaultsFile=liquibase.properties
#
  #    - name: Run 'Liquibase status' in a Docker Container for TEST
  #      uses: docker://liquibase/liquibase:latest
  #      with:
  #        args: status --url="jdbc:snowflake://YQQTDYK-CLARIVATEDATASVS.snowflakecomputing.com/?db=CICD_LIQUIBASE&schema=PUBLIC&user=CICD_SERVICE_ACCOUNT&private_key=${{ env.ENCODED_PRIVATE_KEY }}" --context-filter=TEST --defaultsFile=liquibase.properties
#
  #    - name: Run 'Liquibase update SQL' in a Docker Container for TEST
  #      uses: docker://liquibase/liquibase:latest
  #      with:
  #        args: update-sql --url="jdbc:snowflake://YQQTDYK-CLARIVATEDATASVS.snowflakecomputing.com/?db=CICD_LIQUIBASE&schema=PUBLIC&user=CICD_SERVICE_ACCOUNT&private_key=${{ env.ENCODED_PRIVATE_KEY }}" --context-filter=TEST --defaultsFile=liquibase.properties
#
  #    - name: Run 'Liquibase update' in a Docker Container for TEST
  #      uses: docker://liquibase/liquibase:latest
  #      with:
  #        args: update --url="jdbc:snowflake://YQQTDYK-CLARIVATEDATASVS.snowflakecomputing.com/?db=CICD_LIQUIBASE&schema=PUBLIC&user=CICD_SERVICE_ACCOUNT&private_key=${{ env.ENCODED_PRIVATE_KEY }}" --context-filter=TEST --defaultsFile=liquibase.properties